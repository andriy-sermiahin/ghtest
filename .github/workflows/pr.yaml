name: Node CI environment

on: [push]

jobs:
  update-deps:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    env:
      GH_TOKEN: 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

    strategy:
      matrix:
        package: [moment, dotenv]

    outputs:
      PACKAGE_INFO_VERSION: ${{ steps.step3.outputs.PACKAGE_INFO_VERSION }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - run: |
          PREV_VERSION=$(jq '.dependencies | to_entries | map(select(.key == "${{ matrix.package }}")) | .[0].value' package.json | tr -d '"')
          echo $PREV_VERSION
          echo "PREV_VERSION=$(echo $PREV_VERSION)" >> $GITHUB_ENV

      - run: |
          VERSION=$(yarn info ${{ matrix.package }} | grep "version:" | cut -d \' -f2)
          echo $VERSION
          echo "PACKAGE_INFO_VERSION=$(echo $VERSION)" >> $GITHUB_ENV

      - name: Upgrading package
        run: yarn upgrade ${{ matrix.package }}@$PACKAGE_INFO_VERSION

      - name: Get diff
        run: |
            git diff --name-only --exit-code package.json || echo "IS_UPDATED=$(echo $?)" >> $GITHUB_ENV && exit 0

      - if: env.IS_UPDATED == 1
        run: |
          #git config --global user.name "AndriiSermiahin"
          #git config --global user.email "andrey.sermiahin@gmail.com"
          #git config --global user.email "andrey.sermiahin@gmail.com"
          git config --global github.token $GH_TOKEN
          git checkout -b "${{ matrix.package }}-v$PACKAGE_INFO_VERSION-upgrade"
          git add . && git commit -m "Upgrade ${{ matrix.package }} from v$PREV_VERSION to v$PACKAGE_INFO_VERSION"
          git push origin "${{ matrix.package }}-v$PACKAGE_INFO_VERSION-upgrade"

      - if: env.IS_UPDATED == 1
        run: |
          gh pr create --base main --title "Deps: ${{ matrix.package }} upgrade to v$PACKAGE_INFO_VERSION" --body "${{ matrix.package }} has been upgraded from v$PREV_VERSION to v$PACKAGE_INFO_VERSION"
        

      
